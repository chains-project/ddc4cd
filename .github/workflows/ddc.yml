name: Release tcc-hardened
run-name: ${{ github.actor }} is releasing tcc using DDC ðŸš€
on: 
  workflow_call:
    inputs:
      compromise-tcc:
        type: boolean
        default: false
        description: Compromise grand parent tcc?
      tcc-commit-hash:
        type: string
        default: "f6385c05308f715bdd2c06336801193a21d69b50"
        description: "Commit hash from https://repo.or.cz/tinycc.git to use as input source in DDC"
      nixpkgs-rev:
        type: string
        default: "a9eb3eed170fa916e0a8364e5227ee661af76fde"
        description: "Nixpkgs hash"
      release:
        type: boolean
        default: false
        description: "Publish release?"

jobs:
  DDC:
    strategy:
        matrix:
            os: [ubuntu-22.04, ubuntu-24.04, self-hosted]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: chains-project/ddc4cd
          path: ddc4cd
      - uses: DeterminateSystems/nix-installer-action@e50d5f73bfe71c2dd0aa4218de8f4afa59f8f81d # v16
      - name: Setup tcc
        working-directory: ./ddc4cd
        run: nix-shell --argstr pkgs-rev ${{ inputs.nixpkgs-rev }} --pure --run "./.github/workflows/scripts/setup.sh $( [[ "${{ inputs.compromise-tcc }}" == 'true' ]] && echo "-c" )"
      - name: Perform DDC
        working-directory: ./ddc4cd
        run: nix-shell --argstr pkgs-rev ${{ inputs.nixpkgs-rev }} --pure --run "./.github/workflows/scripts/ddc.sh -e ${{ matrix.os }} -h ${{ inputs.tcc-commit-hash }}"
      - name: Record build OS & Kernel
        run: cat /proc/version > /tmp/build/build-metadata.txt
      - name: Upload build
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          if-no-files-found: error
          path: /tmp/build
          name: build-${{ matrix.os }}
  
  Results:
    runs-on: ubuntu-24.04
    needs: [DDC]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: chains-project/ddc4cd
          path: ddc4cd
      - name: Download build artifacts
        uses: actions/download-artifact@b14cf4c92620c250e1c074ab0a5800e37df86765 # v4.2.0
        with:
          path: ddc4cd/build-artifacts
          pattern: build-*
      - name: Create summary
        working-directory: ./ddc4cd
        run: ./.github/workflows/scripts/summary.sh ${{ inputs.tcc-commit-hash }}
  
  Release:
    if: ${{ inputs.release }}
    runs-on: ubuntu-24.04
    needs: [Results]
    permissions:
      contents: write
      id-token: write
      attestations: write
    steps:
      - uses: DeterminateSystems/nix-installer-action@e50d5f73bfe71c2dd0aa4218de8f4afa59f8f81d # v16
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: chains-project/ddc4cd
          path: ddc4cd
      - uses: actions/download-artifact@b14cf4c92620c250e1c074ab0a5800e37df86765 # v4.2.0
        with:
          path: ddc4cd/build-artifacts
          pattern: build-*
      - name: Generate version
        id: ver
        working-directory: ./ddc4cd
        run: |
          chmod +x ./build-artifacts/build-ubuntu-24.04/tcc-stage2/usr/bin/tcc
          echo "CURRENT_RELEASE=$(./build-artifacts/build-ubuntu-24.04/tcc-stage2/usr/bin/tcc -v | awk '{print $3}')+git.$(echo ${{ inputs.tcc-commit-hash }} | cut -c1-8)" >> $GITHUB_OUTPUT
      - name: Create .deb archive
        working-directory: ./ddc4cd
        run: sudo ./.github/workflows/scripts/release/create-deb.sh -d build-artifacts/build-ubuntu-24.04/tcc-stage2 -v ${{ steps.ver.outputs.CURRENT_RELEASE }}
      - name: Create binary tarball
        working-directory: ./ddc4cd
        run: ./.github/workflows/scripts/release/create-tar.sh -d build-artifacts/build-ubuntu-24.04/tcc-stage2 -v ${{ steps.ver.outputs.CURRENT_RELEASE }}
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Generate release notes
        run: |
          echo "- based on upstream: tcc@[${{ inputs.tcc-commit-hash }}](https://repo.or.cz/tinycc.git/commit/${{ inputs.tcc-commit-hash }})" >> release.md
          echo "- built using nixpkgs hash: ${{ inputs.nixpkgs-rev }}" >> release.md
          echo "- [actions run permalink](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> release.md
      - name: Create release
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.ver.outputs.CURRENT_RELEASE }} -F release.md -t "tcc-hardened ${{ steps.ver.outputs.CURRENT_RELEASE }}"
          gh release upload ${{ steps.ver.outputs.CURRENT_RELEASE }} /tmp/tcc-hardened_${{ steps.ver.outputs.CURRENT_RELEASE }}.deb
          gh release upload ${{ steps.ver.outputs.CURRENT_RELEASE }} /tmp/tcc-hardened_${{ steps.ver.outputs.CURRENT_RELEASE }}.tar.gz
      - name: Attest artifacts
        id: attest
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-path: '/tmp/tcc-hardened_${{ steps.ver.outputs.CURRENT_RELEASE }}.deb, /tmp/tcc-hardened_${{ steps.ver.outputs.CURRENT_RELEASE }}.tar.gz'
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: chains-project/ddc4cd
          path: ddc4cd
      - name: Fill & generate pdf
        id: pdf
        working-directory: ./ddc4cd/doc/certificate
        run: |
          sed -i "s|<tcc-commit>|${{ inputs.tcc-commit-hash }}|" data.typ
          sed -i "s|<project-repo>|${{ github.repository }}|" data.typ
          sed -i "s|<workflow-run-url>|https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|" data.typ
          sed -i "s|<release-tag>|${{ steps.ver.outputs.CURRENT_RELEASE }}|" data.typ
          sed -i "s|<github-actor>|${{ github.actor }}|" data.typ
          sed -i "s|<github-attestation>|${{ steps.attest.outputs.attestation-id }}|" data.typ
          nix-shell -p typst --run "typst compile --font-path ./font -f pdf template.typ /tmp/certificate.pdf"
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Upload pdf
        env: 
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.ver.outputs.CURRENT_RELEASE }} /tmp/certificate.pdf

